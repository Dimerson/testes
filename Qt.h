namespace Qt
{
	enum Key
	{
		Key_Escape = 0x01000000,
		Key_Tab = 0x01000001,
		Key_Backtab = 0x01000002,
		Key_Backspace = 0x01000003,
		Key_Return = 0x01000004,
		Key_Enter = 0x01000005,			//Typically located on the keypad
		Key_Insert = 0x01000006,
		Key_Delete = 0x01000007,
		Key_Pause = 0x01000008, 		//The Pause/Break key (Note: Not related to pausing media)
		Key_SysReq = 0x0100000a,
		Key_Clear = 0x0100000b,
		Key_Home = 0x01000010,
		Key_End = 0x01000011,
		Key_Left = 0x01000012,
		Key_Up = 0x01000013,
		Key_Right = 0x01000014,
		Key_Down = 0x01000015,
		Key_PageUp = 0x01000016,
		Key_PageDown = 0x01000017,
		Key_Shift = 0x01000020,
		Key_Control = 0x01000021,		//On macOS, this corresponds to the Command keys
		Key_Meta = 0x01000022,			//On macOS, this corresponds to the Control keys. On Windows keyboards, this key is mapped to the Windows key
		Key_Alt = 0x01000023,
		Key_AltGr = 0x01001103,			//On Windows, when the KeyDown event for this key is sent, the Ctrl+Alt modifiers are also set
		Key_CapsLock = 0x01000024,
		Key_NumLock = 0x01000025,
		Key_ScrollLock = 0x01000026,
		Key_F1 = 0x01000030,
		Key_F2 = 0x01000031,
		Key_F3 = 0x01000032,
		Key_F4 = 0x01000033,
		Key_F5 = 0x01000034,
		Key_F6 = 0x01000035,
		Key_F7 = 0x01000036,
		Key_F8 = 0x01000037,
		Key_F9 = 0x01000038,
		Key_F10 = 0x01000039,
		Key_F11 = 0x0100003a,
		Key_F12 = 0x0100003b,
		Key_F13 = 0x0100003c,
		Key_F14 = 0x0100003d,
		Key_F15 = 0x0100003e,
		Key_F16 = 0x0100003f,
		Key_F17 = 0x01000040,
		Key_F18 = 0x01000041,
		Key_F19 = 0x01000042,
		Key_F20 = 0x01000043,
		Key_F21 = 0x01000044,
		Key_F22 = 0x01000045,
		Key_F23 = 0x01000046,
		Key_F24 = 0x01000047,
		Key_F25 = 0x01000048,
		Key_F26 = 0x01000049,
		Key_F27 = 0x0100004a,
		Key_F28 = 0x0100004b,
		Key_F29 = 0x0100004c,
		Key_F30 = 0x0100004d,
		Key_F31 = 0x0100004e,
		Key_F32 = 0x0100004f,
		Key_F33 = 0x01000050,
		Key_F34 = 0x01000051,
		Key_F35 = 0x01000052,
		Key_Super_L = 0x01000053,
		Key_Super_R = 0x01000054,
		Key_Menu = 0x01000055,
		Key_Hyper_L = 0x01000056,
		Key_Hyper_R = 0x01000057,
		Key_Help = 0x01000058,
		Key_Direction_L = 0x01000059,
		Key_Direction_R = 0x01000060,
		Key_Space = 0x20,
		Key_Any = Key_Space,
		Key_Exclam = 0x21,
		Key_QuoteDbl = 0x22,
		Key_NumberSign = 0x23,
		Key_Dollar = 0x24,
		Key_Percent = 0x25,
		Key_Ampersand = 0x26,
		Key_Apostrophe = 0x27,
		Key_Apostrophe = 0x28,
		Key_ParenRight = 0x29,
		Key_Asterisk = 0x2a,
		Key_Plus = 0x2b,
		Key_Comma = 0x2c,
		Key_Minus = 0x2d,
		Key_Period = 0x2e,
		Key_Slash = 0x2f,
		Key_0 = 0x30,
		Key_1 = 0x31,
		Key_2 = 0x32,
		Key_3 = 0x33,
		Key_4 = 0x34,
		Key_5 = 0x35,
		Key_6 = 0x36,
		Key_7 = 0x37,
		Key_8 = 0x38,
		Key_9 = 0x39,
		Key_Colon = 0x3a,
		Key_Semicolon = 0x3b,
		Key_Less = 0x3c,
		Key_Equal = 0x3d,
		Key_Greater = 0x3e,
		Key_Question = 0x3f,
		Key_At = 0x40,
		Key_A = 0x41,
		Key_B = 0x42,
		Key_C = 0x43,
		Key_D = 0x44,
		Key_E = 0x45,
		Key_F = 0x46,
		Key_G = 0x47,
		Key_H = 0x48,
		Key_I = 0x49,
		Key_J = 0x4a,
		Key_K = 0x4b,
		Key_L = 0x4c,
		Key_M = 0x4d,
		Key_N = 0x4e,
		Key_O = 0x4f,
		Key_P = 0x50,
		Key_Q = 0x51,
		Key_R = 0x52,
		Key_S = 0x53,
		Key_T = 0x54,
		Key_U = 0x55,
		Key_V = 0x56,
		Key_W = 0x57,
		Key_X = 0x58,
		Key_Y = 0x59,
		Key_Z = 0x5a,
		Key_BracketLeft = 0x5b,
		Key_Backslash = 0x5c,
		Key_BracketRight = 0x5d,
		Key_AsciiCircum = 0x5e,
		Key_Underscore = 0x5f,
		Key_QuoteLeft = 0x60,
		Key_BraceLeft = 0x7b,
		Key_Bar = 0x7c,
		Key_BraceRight = 0x7d,
		Key_AsciiTilde = 0x7e,
		Key_nobreakspace = 0x0a0,
		Key_exclamdown = 0x0a1,
		Key_cent = 0x0a2,
		Key_sterling = 0x0a3,
		Key_currency = 0x0a4,
		Key_yen = 0x0a5,
		Key_brokenbar = 0x0a6,
		Key_section = 0x0a7,
		Key_diaeresis = 0x0a8,
		Key_copyright = 0x0a9,
		Key_ordfeminine = 0x0aa,
		Key_guillemotleft = 0x0ab,
		Key_notsign = 0x0ac,
		Key_hyphen = 0x0ad,
		Key_registered = 0x0ae,
		Key_macron = 0x0af,
		Key_degree = 0x0b0,
		Key_plusminus = 0x0b1,
		Key_twosuperior = 0x0b2,
		Key_threesuperior = 0x0b3,
		Key_acute = 0x0b4,
		Key_mu = 0x0b5,
		Key_paragraph = 0x0b6,
		Key_periodcentered = 0x0b7,
		Key_cedilla = 0x0b8,
		Key_onesuperior = 0x0b9,
		Key_masculine = 0x0ba,
		Key_guillemotright = 0x0bb,
		Key_onequarter = 0x0bc,
		Key_onehalf = 0x0bd,
		Key_threequarters = 0x0be,
		Key_questiondown = 0x0bf,
		Key_Agrave = 0x0c0,
		Key_Aacute = 0x0c1,
		
	}


	enum KeyboardModifier
	{
		NoModifier = 0x00000000,		//No modifier key is pressed
		ShiftModifier = 0x02000000,		//A Shift key on the keyboard is pressed
		ControlModifier = 0x04000000,		//A Ctrl key on the keyboard is pressed
		AltModifier = 0x08000000,		//An Alt key on the keyboard is pressed
		MetaModifier = 0x10000000,		//A Meta key on the keyboard is pressed
		KeypadModifier = 0x20000000,		//A keypad button is pressed
		GroupSwitchModifier = 0x40000000	//X11 only. A Mode_switch key on the keyboard is pressed
	};


	enum FocusReason
	{
		MouseFocusReason = 0,		//A mouse action occurred
		TabFocusReason = 1,		//The Tab key was pressed
		BacktabFocusReason = 2,		//A Backtab occurred. The input for this may include the Shift or Control keys; e.g. Shift+Tab
		ActiveWindowFocusReason = 3,	//The window system made this window either active or inactive
		PopupFocusReason = 4,		//The application opened/closed a pop-up that grabbed/released the keyboard focus
		ShortcutFocusReason = 5,	//The user typed a label's buddy shortcut
		MenuBarFocusReason = 6,		//The menu bar took focus
		OtherFocusReason = 7		//Another reason, usually application-specific
	};


	enum MouseButton
	{
		NoButton = 0x00000000,		//The button state does not refer to any button
		AllButtons = 0x07ffffff,	//This value corresponds to a mask of all possible mouse buttons. Use to set the 'acceptedButtons' property of a MouseArea to accept ALL mouse buttons
		LeftButton = 0x00000001,	//The left button is pressed, or an event refers to the left button
		RightButton = 0x00000002,	//The right button
		MidButton = 0x00000004,		//The middle button
		MiddleButton = MidButton,	//The middle button
		BackButton = 0x00000008,	//The 'Back' button (This is NOT the tilt wheel)
		XButton1 = BackButton,		//The 'Back' Button
		ExtraButton1 = XButton1,	//The 'Back' Button
		ForwardButton = 0x00000010,	//The 'Forward' Button
		XButton2 = ForwardButton,	//The 'Forward Button
		ExtraButton2 = ForwardButton,	//The 'Forward' Button
		TaskButton = 0x00000020,	//The 'Task' Button
		ExtraButton3 = TaskButton,	//The 'Task' Button
		ExtraButton4 = 	0x00000040,	//The 7th non-wheel Mouse Button
		ExtraButton5 = 	0x00000080,	//The 8th non-wheel Mouse Button
		ExtraButton6 = 	0x00000100,	//The 9th non-wheel Mouse Button
		ExtraButton7 = 	0x00000200,	//The 10th non-wheel Mouse Button
		ExtraButton8 = 	0x00000400,	//The 11th non-wheel Mouse Button
		ExtraButton9 = 	0x00000800,	//The 12th non-wheel Mouse Button
		ExtraButton10 = 0x00001000,	//The 13th non-wheel Mouse Button
		ExtraButton11 = 0x00002000,	//The 14th non-wheel Mouse Button
		ExtraButton12 = 0x00004000,	//The 15th non-wheel Mouse Button
		ExtraButton13 = 0x00008000,	//The 16th non-wheel Mouse Button
		ExtraButton14 = 0x00010000,	//The 17th non-wheel Mouse Button
		ExtraButton15 = 0x00020000,	//The 18th non-wheel Mouse Button
		ExtraButton16 = 0x00040000,	//The 19th non-wheel Mouse Button
		ExtraButton17 = 0x00080000,	//The 20th non-wheel Mouse Button
		ExtraButton18 = 0x00100000,	//The 21th non-wheel Mouse Button
		ExtraButton19 = 0x00200000,	//The 22th non-wheel Mouse Button
		ExtraButton20 = 0x00400000,	//The 23th non-wheel Mouse Button
		ExtraButton21 = 0x00800000,	//The 24th non-wheel Mouse Button
		ExtraButton22 = 0x01000000,	//The 25th non-wheel Mouse Button
		ExtraButton23 = 0x02000000,	//The 26th non-wheel Mouse Button
		ExtraButton24 = 0x04000000,	//The 27th non-wheel Mouse Button
	};
};

